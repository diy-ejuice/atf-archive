{"version":3,"sources":["webpack:///./src/utils/index.js","webpack:///./node_modules/react-bootstrap/esm/Table.js","webpack:///./src/pages/flavors.js"],"names":["getSlug","slug","replace","toLowerCase","module","exports","getFlavorSlug","flavor","id","vendor","name","getRecipeSlug","recipe","getMixerSlug","mixer","Table","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","classes","table","createElement","responsiveClass","FlavorsPage","flavors","data","allFlavorsJson","nodes","title","map","key","to","pageQuery"],"mappings":"oGAAA,IAAMA,EAAU,SAACC,GAAD,OAAUA,EAAKC,QAAQ,OAAQ,KAAKC,eASpDC,EAAOC,QAAU,CACfC,cARoB,SAACC,GAAD,OACpBP,EAAQ,WAAWO,EAAOC,GAAnB,IAAyBD,EAAOE,OAAhC,IAA0CF,EAAOG,OAQxDC,cANoB,SAACC,GAAD,OAAYZ,EAAQ,WAAWY,EAAOJ,KAO1DK,aALmB,SAACC,GAAD,OAAWd,EAAQ,UAAUc,EAAMJ,S,kCCPxD,kFAKIK,EAAQ,IAAMC,YAAW,SAAUC,EAAMC,GAC3C,IAAIC,EAAWF,EAAKE,SAChBC,EAAYH,EAAKG,UACjBC,EAAUJ,EAAKI,QACfC,EAAWL,EAAKK,SAChBC,EAAaN,EAAKM,WAClBC,EAAQP,EAAKO,MACbC,EAAOR,EAAKQ,KACZC,EAAUT,EAAKS,QACfC,EAAaV,EAAKU,WAClBC,EAAQ,YAA8BX,EAAM,CAAC,WAAY,YAAa,UAAW,WAAY,aAAc,QAAS,OAAQ,UAAW,eAEvIY,EAAoB,YAAmBV,EAAU,SACjDW,EAAU,IAAWV,EAAWS,EAAmBH,GAAWG,EAAoB,IAAMH,EAASD,GAAQI,EAAoB,IAAMJ,EAAMJ,GAAWQ,EAAoB,WAAYP,GAAYO,EAAoB,YAAaN,GAAcM,EAAoB,cAAeL,GAASK,EAAoB,UAC/SE,EAAqB,IAAMC,cAAc,QAAS,YAAS,GAAIJ,EAAO,CACxER,UAAWU,EACXZ,IAAKA,KAGP,GAAIS,EAAY,CACd,IAAIM,EAAkBJ,EAAoB,cAM1C,MAJ0B,iBAAfF,IACTM,EAAkBA,EAAkB,IAAMN,GAGxB,IAAMK,cAAc,MAAO,CAC7CZ,UAAWa,GACVF,GAGL,OAAOA,KAEM,O,sOC7BA,SAASG,EAAT,GAAgC,IACvCC,EADsC,EAARC,KACfC,eAAeC,MAEpC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,YACX,kBAAC,IAAD,KACE,uCACA,kBAAC,IAAD,CAAOlB,SAAO,GACZ,+BACE,4BACE,sCACA,sCAGJ,+BACGc,EAAQK,KAAI,SAACjC,GAAD,OACX,wBAAIkC,IAAKlC,EAAOC,IACd,4BAAKD,EAAOE,QACZ,4BACE,kBAAC,OAAD,CAAMiC,GAAIpC,wBAAcC,IAAUA,EAAOG,eAepD,IAAMiC,EAAS","file":"component---src-pages-flavors-js-be430851ec4e4db333ef.js","sourcesContent":["const getSlug = (slug) => slug.replace(/\\s+/g, '-').toLowerCase();\r\n\r\nconst getFlavorSlug = (flavor) =>\r\n  getSlug(`/flavor/${flavor.id} ${flavor.vendor} ${flavor.name}`);\r\n\r\nconst getRecipeSlug = (recipe) => getSlug(`/recipe/${recipe.id}`);\r\n\r\nconst getMixerSlug = (mixer) => getSlug(`/mixer/${mixer.name}`);\r\n\r\nmodule.exports = {\r\n  getFlavorSlug,\r\n  getRecipeSlug,\r\n  getMixerSlug\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import { graphql, Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Container, Table } from 'react-bootstrap';\r\n\r\nimport Layout from '~components/Layout';\r\nimport SEO from '~components/SEO';\r\nimport { getFlavorSlug } from '~utils';\r\n\r\nexport default function FlavorsPage({ data }) {\r\n  const flavors = data.allFlavorsJson.nodes;\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Flavors\" />\r\n      <Container>\r\n        <h1>Flavors</h1>\r\n        <Table striped>\r\n          <thead>\r\n            <tr>\r\n              <th>Vendor</th>\r\n              <th>Name</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {flavors.map((flavor) => (\r\n              <tr key={flavor.id}>\r\n                <td>{flavor.vendor}</td>\r\n                <td>\r\n                  <Link to={getFlavorSlug(flavor)}>{flavor.name}</Link>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nFlavorsPage.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allFlavorsJson {\r\n      nodes {\r\n        id\r\n        name\r\n        vendor\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}