{"version":3,"sources":["webpack:///./src/pages/flavors.js","webpack:///./node_modules/react-bootstrap/esm/Feedback.js","webpack:///./node_modules/react-bootstrap/esm/FormContext.js","webpack:///./node_modules/react-bootstrap/esm/FormControl.js"],"names":["FlavorsPage","flavors","data","allFlavorsJson","nodes","useState","searchTerm","setSearchTerm","debouncedSetSearchTerm","handleChangeTerm","useCallback","event","target","value","filteredFlavors","filter","flavor","searchExpr","RegExp","test","name","vendor","abbreviation","FlavorRow","index","style","key","id","Header","Title","to","getFlavorSlug","sort","a","b","localeCompare","title","type","onChange","placeholder","height","itemData","itemCount","length","itemSize","Feedback","forwardRef","_ref","ref","_ref$as","as","Component","className","_ref$type","_ref$tooltip","tooltip","props","createElement","displayName","createContext","controlId","undefined","FormControl","classes","_classes","bsPrefix","bsCustomPrefix","size","htmlSize","_ref$isValid","isValid","_ref$isInvalid","isInvalid","plaintext","readOnly","custom","_ref2","prefix","defaultPrefix","_classes2","_classes3","_classes4","_classes5","Object"],"mappings":"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","file":"component---src-pages-flavors-js-c3ce38c21ede69c5cf7e.js","sourcesContent":["import { graphql, Link } from 'gatsby';\r\nimport { debounce } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { Container, Card, FormControl } from 'react-bootstrap';\r\nimport { FixedSizeList as List } from 'react-window';\r\n\r\nimport Layout from '~components/Layout';\r\nimport SEO from '~components/SEO';\r\nimport { getFlavorSlug } from '~utils';\r\n\r\nexport default function FlavorsPage({ data }) {\r\n  const flavors = data.allFlavorsJson.nodes;\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const debouncedSetSearchTerm = debounce(setSearchTerm, 250);\r\n  const handleChangeTerm = useCallback(\r\n    (event) => debouncedSetSearchTerm(event.target.value),\r\n    [debouncedSetSearchTerm]\r\n  );\r\n\r\n  const filteredFlavors = flavors.filter((flavor) => {\r\n    const searchExpr = new RegExp(searchTerm, 'i');\r\n\r\n    return (\r\n      searchTerm === '' ||\r\n      searchExpr.test(flavor.name) ||\r\n      searchExpr.test(flavor.vendor.name) ||\r\n      searchExpr.test(flavor.vendor.abbreviation)\r\n    );\r\n  });\r\n\r\n  filteredFlavors.sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n  function FlavorRow({ index, style }) {\r\n    const flavor = filteredFlavors[index];\r\n\r\n    return (\r\n      <Card key={flavor.id} style={style}>\r\n        <Card.Header>\r\n          <Card.Title>\r\n            <Link to={getFlavorSlug(flavor)}>\r\n              {flavor.name} by {flavor.vendor.name}\r\n            </Link>\r\n          </Card.Title>\r\n        </Card.Header>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  FlavorRow.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    style: PropTypes.object\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Flavors\" />\r\n      <Container>\r\n        <h1>Flavors</h1>\r\n        <FormControl\r\n          type=\"text\"\r\n          onChange={handleChangeTerm}\r\n          placeholder=\"search by name or vendor\"\r\n        />\r\n        <List\r\n          height={800}\r\n          itemData={filteredFlavors}\r\n          itemCount={filteredFlavors.length}\r\n          itemSize={60}\r\n        >\r\n          {FlavorRow}\r\n        </List>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nFlavorsPage.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allFlavorsJson {\r\n      nodes {\r\n        id\r\n        name\r\n        vendor {\r\n          name\r\n          abbreviation\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nvar Feedback = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'valid' : _ref$type,\n      _ref$tooltip = _ref.tooltip,\n      tooltip = _ref$tooltip === void 0 ? false : _ref$tooltip,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"className\", \"type\", \"tooltip\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, type + \"-\" + (tooltip ? 'tooltip' : 'feedback'))\n  }));\n});\nFeedback.displayName = 'Feedback';\nexport default Feedback;","import React from 'react'; // TODO\n\nvar FormContext = React.createContext({\n  controlId: undefined\n});\nexport default FormContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport all from 'prop-types-extra/lib/all';\nimport React, { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormControl = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      type = _ref.type,\n      size = _ref.size,\n      htmlSize = _ref.htmlSize,\n      id = _ref.id,\n      className = _ref.className,\n      _ref$isValid = _ref.isValid,\n      isValid = _ref$isValid === void 0 ? false : _ref$isValid,\n      _ref$isInvalid = _ref.isInvalid,\n      isInvalid = _ref$isInvalid === void 0 ? false : _ref$isInvalid,\n      plaintext = _ref.plaintext,\n      readOnly = _ref.readOnly,\n      custom = _ref.custom,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"bsCustomPrefix\", \"type\", \"size\", \"htmlSize\", \"id\", \"className\", \"isValid\", \"isInvalid\", \"plaintext\", \"readOnly\", \"custom\", \"as\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  var _ref2 = custom ? [bsCustomPrefix, 'custom'] : [bsPrefix, 'form-control'],\n      prefix = _ref2[0],\n      defaultPrefix = _ref2[1];\n\n  bsPrefix = useBootstrapPrefix(prefix, defaultPrefix);\n  var classes;\n\n  if (plaintext) {\n    var _classes;\n\n    classes = (_classes = {}, _classes[bsPrefix + \"-plaintext\"] = true, _classes);\n  } else if (type === 'file') {\n    var _classes2;\n\n    classes = (_classes2 = {}, _classes2[bsPrefix + \"-file\"] = true, _classes2);\n  } else if (type === 'range') {\n    var _classes3;\n\n    classes = (_classes3 = {}, _classes3[bsPrefix + \"-range\"] = true, _classes3);\n  } else if (Component === 'select' && custom) {\n    var _classes4;\n\n    classes = (_classes4 = {}, _classes4[bsPrefix + \"-select\"] = true, _classes4[bsPrefix + \"-select-\" + size] = size, _classes4);\n  } else {\n    var _classes5;\n\n    classes = (_classes5 = {}, _classes5[bsPrefix] = true, _classes5[bsPrefix + \"-\" + size] = size, _classes5);\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && \"is-valid\", isInvalid && \"is-invalid\")\n  }));\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback: Feedback\n});"],"sourceRoot":""}