{"version":3,"sources":["webpack:///./src/pages/vendors.js"],"names":["sortKeys","name","flavors","Vendors","vendors","data","allVendorsJson","nodes","useState","sortKey","setSortKey","sort","a","b","localeCompare","count","VendorRow","index","style","vendor","to","getVendorSlug","Item","md","title","Header","Title","Body","height","itemData","itemCount","length","itemSize"],"mappings":"8FAAA,gMAWMA,EAAW,CACfC,KAAM,OACNC,QAAS,gBAGI,SAASC,EAAT,GAA4B,IACnCC,EADkC,EAARC,KACXC,eAAeC,MADI,EAEVC,mBAASR,EAASC,MAAzCQ,EAFiC,KAExBC,EAFwB,KAIxC,OAAQD,GACN,KAAKT,EAASC,KACd,QACEG,EAAQO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEX,KAAKa,cAAcD,EAAEZ,SAC9C,MACF,KAAKD,EAASE,QACZE,EAAQO,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEX,QAAQa,MAAQH,EAAEV,QAAQa,SAIvD,SAASC,EAAT,GAAsC,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MACpBC,EAASf,EAAQa,GAEvB,OACE,kBAAC,OAAD,CAAMG,GAAIC,wBAAcF,IACtB,kBAAC,IAAUG,KAAX,CAAgBJ,MAAOA,GACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKK,GAAI,IAAKJ,EAAOlB,MACrB,kBAAC,IAAD,CAAKsB,GAAI,GAAIJ,EAAOjB,QAAQa,MAA5B,eAYV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKS,MAAM,YACX,kBAAC,IAAD,KACE,kBAAC,IAAKC,OAAN,KACE,kBAAC,IAAKC,MAAN,KACE,yCAGJ,kBAAC,IAAKC,KAAN,KACE,kBAAC,IAAD,CACElB,QAASA,EACTT,SAAUA,EACVU,WAAYA,IAEd,kBAAC,IAAD,CACEkB,OAAQ,IACRC,SAAUzB,EACV0B,UAAW1B,EAAQ2B,OACnBC,SAAU,IAEThB","file":"component---src-pages-vendors-js-3f82682889ee647874c4.js","sourcesContent":["import { graphql, Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport { Card, Col, ListGroup, Row } from 'react-bootstrap';\r\nimport { FixedSizeList as List } from 'react-window';\r\n\r\nimport Layout from '~components/Layout';\r\nimport SEO from '~components/SEO';\r\nimport SortButtons from '~components/SortButtons';\r\nimport { getVendorSlug } from '~utils';\r\n\r\nconst sortKeys = {\r\n  name: 'name',\r\n  flavors: 'flavor count'\r\n};\r\n\r\nexport default function Vendors({ data }) {\r\n  const vendors = data.allVendorsJson.nodes;\r\n  const [sortKey, setSortKey] = useState(sortKeys.name);\r\n\r\n  switch (sortKey) {\r\n    case sortKeys.name:\r\n    default:\r\n      vendors.sort((a, b) => a.name.localeCompare(b.name));\r\n      break;\r\n    case sortKeys.flavors:\r\n      vendors.sort((a, b) => b.flavors.count - a.flavors.count);\r\n      break;\r\n  }\r\n\r\n  function VendorRow({ index, style }) {\r\n    const vendor = vendors[index];\r\n\r\n    return (\r\n      <Link to={getVendorSlug(vendor)}>\r\n        <ListGroup.Item style={style}>\r\n          <Row>\r\n            <Col md={10}>{vendor.name}</Col>\r\n            <Col md={2}>{vendor.flavors.count} flavors</Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  VendorRow.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    style: PropTypes.object\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Vendors\" />\r\n      <Card>\r\n        <Card.Header>\r\n          <Card.Title>\r\n            <h1>Vendors</h1>\r\n          </Card.Title>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <SortButtons\r\n            sortKey={sortKey}\r\n            sortKeys={sortKeys}\r\n            setSortKey={setSortKey}\r\n          />\r\n          <List\r\n            height={800}\r\n            itemData={vendors}\r\n            itemCount={vendors.length}\r\n            itemSize={60}\r\n          >\r\n            {VendorRow}\r\n          </List>\r\n        </Card.Body>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nVendors.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allVendorsJson {\r\n      nodes {\r\n        id\r\n        name\r\n        flavors {\r\n          count\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}